package view;

import util.JOptionPaneCustom;
import controller.VeiculoController;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.VeiculoModel;
import util.Pesquisa;

public class VeiculoView extends javax.swing.JInternalFrame {

    VeiculoController veiculoController = new VeiculoController();
    boolean tabelaAtiva = true;

    public VeiculoView() {
        initComponents();
        resetTela();
        jtfID.setEditable(false);
    }

    private void limparCampos() {
        jtfID.setText("");
        jtfPlaca.setText("");
        jtfMarca.setText("");
        jtfModelo.setText("");
        jftfAno.setText("");
    }
    
    public void carregarTabela() {

        ArrayList<VeiculoModel> veiculos = veiculoController.selecionarTodos();
        DefaultTableModel modelo = (DefaultTableModel) jtVeiculos.getModel();
        modelo.setRowCount(0);

        for (int i = 0; i < veiculos.size(); i++) {
            modelo.addRow(new String[]{
                String.valueOf(veiculos.get(i).getId()),
                veiculos.get(i).getPlaca(),
                veiculos.get(i).getMarca(),
                veiculos.get(i).getModelo(),
                String.valueOf(veiculos.get(i).getAno()),
                veiculos.get(i).getStatus()
            });
        }
    }
    
    public void resetTela() {
        //Ativa os botões Novo, Limpar e Pesquisar
        jbNovo.setEnabled(true);
        jbLimpar.setEnabled(true);
        jbPesquisar.setEnabled(true);

        //Desativa os outros botões e campos de texto
        jbSalvar.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jbCancelar.setEnabled(false);

        jtfPlaca.setEditable(false);
        jtfMarca.setEditable(false);
        jtfModelo.setEditable(false);
        jftfAno.setEditable(false);

        //Recarrega a tabela, limpa os campos e ativa a flag do evento de clique da tabela
        carregarTabela();
        limparCampos();
        tabelaAtiva = true;
    }

    public void ativarEdicao() {
        //Desabilita os botões Novo, Editar, Excluir e Limpar
        jbNovo.setEnabled(false);
        jbEditar.setEnabled(false);
        jbExcluir.setEnabled(false);
        jbLimpar.setEnabled(false);

        //Habilita o botão Salvar e Cancelar e os campos de texto
        jbSalvar.setEnabled(true);
        jbCancelar.setEnabled(true);
        jtfPlaca.setEditable(true);
        jtfMarca.setEditable(true);
        jtfModelo.setEditable(true);
        jftfAno.setEditable(true);

        //Desativa a flag do evento de clique da tabela
        tabelaAtiva = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jbNovo = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jlMarca = new javax.swing.JLabel();
        jlAno = new javax.swing.JLabel();
        jlPlaca = new javax.swing.JLabel();
        jftfAno = new javax.swing.JFormattedTextField();
        jsVeiculos = new javax.swing.JScrollPane();
        jtVeiculos = new javax.swing.JTable();
        jtfMarca = new javax.swing.JTextField();
        jlModelo = new javax.swing.JLabel();
        jtfModelo = new javax.swing.JTextField();
        jlID = new javax.swing.JLabel();
        jtfID = new javax.swing.JTextField();
        jbLimpar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbPesquisar = new javax.swing.JButton();
        jtfPlaca = new javax.swing.JTextField();

        setClosable(true);
        setTitle("Cadastro de Veículos");

        jbNovo.setText("Novo");
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });

        jbSalvar.setText("Salvar");
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });

        jbEditar.setText("Editar");
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbExcluir.setText("Excluir");
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jlMarca.setText("Marca:");

        jlAno.setText("Ano:");

        jlPlaca.setText("Placa:");

        jftfAno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));

        jtVeiculos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Placa", "Marca", "Modelo", "Ano", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtVeiculos.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        jtVeiculos.setPreferredSize(new java.awt.Dimension(450, 78));
        jtVeiculos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtVeiculosMouseClicked(evt);
            }
        });
        jsVeiculos.setViewportView(jtVeiculos);

        jtfMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfMarcaActionPerformed(evt);
            }
        });

        jlModelo.setText("Modelo:");

        jlID.setText("ID:");

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        jbPesquisar.setText("Pesquisar");
        jbPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jlID)
                                    .addComponent(jlPlaca)
                                    .addComponent(jlMarca)
                                    .addComponent(jlModelo)
                                    .addComponent(jlAno))
                                .addGap(46, 46, 46))
                            .addComponent(jtfID, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfMarca, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtfModelo, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jftfAno, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbNovo, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(jbEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                            .addComponent(jbSalvar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jbLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jbPesquisar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jtfPlaca)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jsVeiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jsVeiculos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbNovo)
                            .addComponent(jbLimpar))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbEditar)
                            .addComponent(jbExcluir))
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbSalvar)
                            .addComponent(jbCancelar))
                        .addGap(12, 12, 12)
                        .addComponent(jbPesquisar)
                        .addGap(12, 12, 12)
                        .addComponent(jlID)
                        .addGap(4, 4, 4)
                        .addComponent(jtfID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlPlaca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jlMarca)
                        .addGap(4, 4, 4)
                        .addComponent(jtfMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlModelo)
                        .addGap(4, 4, 4)
                        .addComponent(jtfModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlAno)
                        .addGap(4, 4, 4)
                        .addComponent(jftfAno, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 1, Short.MAX_VALUE)))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
        limparCampos();
        ativarEdicao();
        jbLimpar.setEnabled(true);
        jbPesquisar.setEnabled(false);


    }//GEN-LAST:event_jbNovoActionPerformed
    
    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        VeiculoModel veiculo = new VeiculoModel();

        //Se o campo ID está vazio, o botão Novo foi pressionado
        if ("".equals(jtfID.getText())) {
            veiculo.setPlaca(jtfPlaca.getText());
            veiculo.setMarca(jtfMarca.getText());
            veiculo.setModelo(jtfModelo.getText());
            veiculo.setAno(Integer.parseInt(jftfAno.getText()));

            if (veiculoController.inserir(veiculo)) {
                JOptionPane.showMessageDialog(this, "Veículo cadastrado com sucesso.");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao cadastrar o veículo.");
            }
        } //Caso contrário, uma linha da tabela foi selecionada e o botão Editar foi pressionado
        else {
            veiculo.setId(Integer.parseInt(jtfID.getText()));
            veiculo.setPlaca(jtfPlaca.getText());
            veiculo.setMarca(jtfMarca.getText());
            veiculo.setModelo(jtfModelo.getText());

            if (veiculoController.editar(veiculo)) {
                JOptionPane.showMessageDialog(this, "Os dados do veículo foram atualizados com sucesso.");
            } else {
                JOptionPane.showMessageDialog(this, "Erro ao atualizar dados do veículo.");
            }
        }

        resetTela();
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jtVeiculosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtVeiculosMouseClicked

        if (tabelaAtiva == true) {
            int linha = jtVeiculos.getSelectedRow();
            DefaultTableModel modelo = (DefaultTableModel) jtVeiculos.getModel();

            jtfID.setText((modelo.getValueAt(linha, 0)).toString());
            jtfPlaca.setText((modelo.getValueAt(linha, 1)).toString());
            jtfMarca.setText((modelo.getValueAt(linha, 2)).toString());
            jtfModelo.setText((modelo.getValueAt(linha, 3)).toString());
            jftfAno.setText((modelo.getValueAt(linha, 4)).toString());

            jbEditar.setEnabled(true);
            jbExcluir.setEnabled(true);
        }

    }//GEN-LAST:event_jtVeiculosMouseClicked

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        ativarEdicao();
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        VeiculoModel veiculo = new VeiculoModel();
        veiculo.setId(Integer.parseInt(jtfID.getText()));

        if (veiculoController.excluir(veiculo)) {
            JOptionPane.showMessageDialog(this, "Veículo excluído com sucesso.");
        } else {
            JOptionPane.showMessageDialog(this, "Erro ao excluir o veículo.");
        }

        resetTela();
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        resetTela();
    }//GEN-LAST:event_jbLimparActionPerformed

    private void jtfMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfMarcaActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        resetTela();
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPesquisarActionPerformed
        Pesquisa p = new Pesquisa();
        String[] opcoesBusca = {"ID", "Placa", "Marca", "Modelo", "Ano", "Status"};
        List<VeiculoModel> lista = p.pesquisaVeiculo(opcoesBusca);
        
        // Se a pesquisa retornar null o usuário pesquisou um valor vazio ou inválido (a mensagem especificando qual o valor inválido é exibida no método pesquisarVeiculo)
        if (lista == null) {
            resetTela();
        }
        
        // Se a pesquisa retornar uma lista com tamanho 0 o usuário não digitou nenhum valor inválido, mas não foi encontrado nenhum veículo no banco
        else if (lista.size() == 0) {
            JOptionPane.showMessageDialog(null, "Veículo não encontrado no banco de dados.");
            resetTela();
        }
        
        // Se a pesquisa retornar uma lista de tamanho 1, apenas um veículo foi encontrado na busca e os campos de texto são preenchidos
        else if (lista.size() == 1) {
            JOptionPane.showMessageDialog(this, "1 Veículo encontrado.\nExibindo o resultado nos campos de texto.");
            resetTela();
            VeiculoModel v = lista.get(0);
           
            jtfID.setText(Integer.toString(v.getId()));
            jtfPlaca.setText(v.getPlaca());
            jtfMarca.setText(v.getMarca());
            jtfModelo.setText(v.getModelo());
            jftfAno.setText(Integer.toString(v.getAno()));

            jbEditar.setEnabled(true);
            jbExcluir.setEnabled(true);
            jbLimpar.setEnabled(true);
        }
        
        // Se a pesquisa retornar uma lista de tamanho maior que 1, vários veículos foram encontrados e a tabela é preenchida com os resultados
        else {
            JOptionPane.showMessageDialog(this, lista.size() + " veículos encontrados.\nExibindo os resultados na tabela.");
            resetTela();
            DefaultTableModel model = (DefaultTableModel) jtVeiculos.getModel();
            model.setRowCount(0);
            
            for (VeiculoModel veiculoEncontrado : lista) {
                model.addRow(new Object[]{
                    veiculoEncontrado.getId(),
                    veiculoEncontrado.getPlaca(),
                    veiculoEncontrado.getMarca(),
                    veiculoEncontrado.getModelo(),
                    veiculoEncontrado.getAno(),
                    veiculoEncontrado.getStatus()
                });
            }
        }
    }//GEN-LAST:event_jbPesquisarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbPesquisar;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JFormattedTextField jftfAno;
    private javax.swing.JLabel jlAno;
    private javax.swing.JLabel jlID;
    private javax.swing.JLabel jlMarca;
    private javax.swing.JLabel jlModelo;
    private javax.swing.JLabel jlPlaca;
    private javax.swing.JScrollPane jsVeiculos;
    private javax.swing.JTable jtVeiculos;
    private javax.swing.JTextField jtfID;
    private javax.swing.JTextField jtfMarca;
    private javax.swing.JTextField jtfModelo;
    private javax.swing.JTextField jtfPlaca;
    // End of variables declaration//GEN-END:variables
}
